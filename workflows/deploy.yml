name: Deploy Solobase Demo Site

on:
  push:
    branches:
      - main
      - staging
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Deployment target'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
          - dockerhub

env:
  HUGO_VERSION: 0.120.0
  NODE_VERSION: 18

jobs:
  build:
    name: Build Site
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build site
        run: |
          chmod +x scripts/build-prod.sh
          scripts/build-prod.sh production

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: public
          path: public/
          retention-days: 7

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:1313
            http://localhost:1313/docs
            http://localhost:1313/demo
          uploadArtifacts: true
          temporaryPublicStorage: true

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: public
          path: public/

      - name: Run tests
        run: npm test

      - name: Validate HTML
        uses: Cyb3r-Jak3/html5validator-action@v7.2.0
        with:
          root: public/
          css: true
          log_level: INFO

  build-containers:
    name: Build Containers
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push demo container
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.demo
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/solobase-demo:latest
            ${{ secrets.DOCKER_USERNAME }}/solobase-demo:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push manager container
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.manager
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/solobase-manager:latest
            ${{ secrets.DOCKER_USERNAME }}/solobase-manager:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-site:
    name: Deploy Site
    runs-on: ubuntu-latest
    needs: [test, build-containers]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: public
          path: public/

      - name: Deploy to Netlify
        if: github.ref == 'refs/heads/main'
        uses: nwtgck/actions-netlify@v2.1
        with:
          publish-dir: ./public
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          cname: demo.solobase.dev

  deploy-containers:
    name: Deploy Containers
    runs-on: ubuntu-latest
    needs: build-containers
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy to Kubernetes
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Deploying to production Kubernetes cluster..."
          # Add your Kubernetes deployment commands here

      - name: Health check
        run: |
          echo "Performing health checks..."
          # Add health check commands

      - name: Notify deployment
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          text: 'Deployment ${{ job.status }} for ${{ github.sha }}'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}